moment.updateLocale("zh-cn", {
    meridiem: function (hour, minute, isLowercase) {
        return hour < 6
            ? "å‡Œæ™¨"
            : hour < 9
                ? "æ—©ä¸Š"
                : hour < 11 && minute < 30
                    ? "ä¸Šåˆ"
                    : hour < 13 && minute < 30
                        ? "ä¸­åˆ"
                        : hour < 18
                            ? "ä¸‹åˆ"
                            : "æ™šä¸Š"
    }
}),
function () {
    var day,
        formats,
        hour,
        initialize,
        minute,
        second,
        week;
    second = 1e3,
    minute = 6e4,
    hour = 36e5,
    day = 864e5,
    week = 6048e5,
    year = (new Date).getFullYear(),
    formats = {
        seconds: {
            short: " ç§’å‰",
            long: " ç§’å‰"
        },
        minutes: {
            short: " åˆ†å‰",
            long: " åˆ†å‰"
        },
        hours: {
            short: " å°æ—¶å‰",
            long: " å°æ—¶å‰"
        },
        days: {
            short: " å¤©å‰",
            long: " å¤©å‰"
        }
    },
    initialize = function (moment) {
        var twitterFormat;
        return twitterFormat = function (format) {
            var diff,
                num,
                unit,
                unitStr;
            if (unit = null, num = null, (diff = Math.abs(this.diff(moment()))) <= 1e3) 
                unit = "seconds",
                num = 1;
            else if (diff < 6e4) 
                unit = "seconds";
            else if (diff < 36e5) 
                unit = "minutes";
            else if (diff < day) 
                unit = "hours";
            else {
                if ("short" !== format) 
                    return this.format("YYYYå¹´MMæœˆDDæ—¥ï¼ŒHH:mm â€¢ a ");
                if (!(diff < week)) 
                    return this.year() == year
                        ? this.format("MMæœˆDDæ—¥ï¼ŒHH:mm â€¢ a ")
                        : this.format("YYYYå¹´MMæœˆDDæ—¥ï¼ŒHH:mm â€¢ a ");
                unit = "days"
            }
            return num && unit || (num = moment.duration(diff)[unit]()),
            unitStr = unit = formats[unit][format],
            "long" === format && num > 1 && (unitStr += "s"),
            num + unitStr
        },
        moment.fn.twitterLong = function () {
            return twitterFormat.call(this, "long")
        },
        moment.fn.twitter = moment.fn.twitterShort = function () {
            return twitterFormat.call(this, "short")
        },
        moment
    },
    "function" == typeof define && define.amd
        ? define("moment-twitter", ["moment"], (function (moment) {
            return this.moment = initialize(moment)
        }))
        : "undefined" != typeof module
            ? module.exports = initialize(require("moment"))
            : "undefined" != typeof window && window.moment && (
                this.moment = initialize(this.moment)
            )
}.call(this);